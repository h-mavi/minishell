
/* Controlla se la stringa datagli corrisponde ad un comando */
 int	check_if_cmd(char *orig, char **env)
 {
 	int		i;
 	char	*cmd;
 	char	*tmp;
 	char	**path;

 	i = -1;
 	path = NULL;
 	while (env[++i])
 	{
 		if (ft_strncmp(env[i], "PATH=", 5) == 0)
 		{
 			path = ft_split(env[i] + 5, ':');
 			break ;
 		}
 	}
 	if (!path)
 		return (-1); //ERROR
 	i = -1;
 	while (path[++i])
 	{
 		tmp = ft_strjoin(path[i], "/");
 		cmd = ft_strjoin(tmp, orig);
 		free(tmp);
 		if (access(cmd, F_OK) == 0)
 			return (free(cmd), free_arr(path), COMMAND);
 		free(cmd);
 	}
 	return (free_arr(path), 0);
 }




 int	werami(char *s, int i)
{
	int	x;
	int	a;
	int	v;

	x = -1;
	a = 0;
	v = 0;
	if (s == NULL || s[i] == '\0')
		return (-2);
	while (s[++x] != '\0')
	{
		if (s[x] == '"' && a == 0 && v == 0)
			v = 1;
		else if (s[x] == '"' && a == 0 && v == 1)
			v = 0;
		if (s[x] == '\'' && a == 0 && v == 0)
			a = 1;
		else if (s[x] == '\'' && a == 1 && v == 0)
			a = 0;
		if (((s[x] == '\'' && v == 0) || (s[x] == '"' && a == 0)) && x == i)
			return (0);
		if ((x == i && a == 1) || (x == i && v == 1))
			return (1);
		if (s[x] == '\0' && ((a == 1) || (v == 1)))
			return (-2);
	}
	return (-1);
}
